$col: calc(100% / 12);

@mixin grid-setup() {
	&:not(.flex-grid) {
		display: block;
	}
	margin-left: calc(#{$gutter} * -.5);
	margin-right: calc(#{$gutter} * -.5);
}

@mixin wide-gutter-grid-setup() {
	&:not(.flex-grid) {
		display: block;
	}
	margin-left: calc(#{$wide-gutter} * -.5);
	margin-right: calc(#{$wide-gutter} * -.5);
}

@mixin tight-gutter-grid-setup() {
	&:not(.flex-grid) {
		display: block;
	}
	margin-left: calc(#{$tight-gutter} * -.5);
	margin-right: calc(#{$tight-gutter} * -.5);
}

@mixin col-setup() {
	// Column Rules
	> *[class^="col"],
	> .col {
		font-size: inherit;
		flex-grow: 0;
		padding-left: calc(#{$gutter} / 2);
		padding-right: calc(#{$gutter} / 2);
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
		&.grow {
			flex-grow: 1;
		}
		&.no-grow {
			flex-grow: 0;
			flex-shrink: 0;
		}
	}

	> .col-12 {
		width: calc(#{$col} * 12);
	}

	> .col-11 {
		width: calc(#{$col} * 11);
	}

	> .col-10 {
		width: calc(#{$col} * 10);
	}

	> .col-9 {
		width: calc(#{$col} * 9);
	}

	> .col-8 {
		width: calc(#{$col} * 8);
	}

	> .col-7 {
		width: calc(#{$col} * 7);
	}

	> .col-6 {
		width: calc(#{$col} * 6);
	}

	> .col-5 {
		width: calc(#{$col} * 5);
	}

	> .col-4 {
		width: calc(#{$col} * 4);
	}

	> .col-3 {
		width: calc(#{$col} * 3);
	}

	> .col-2 {
		width: calc(#{$col} * 2);
	}

	> .col-1 {
		width: $col;
	}

	/*	Use .push classes to move columsn over
			Gernerally better to do this manually and breakpoints
	*/
	.push-right-1 {
		margin-right: $col;
	}

	.push-right-2 {
		margin-right: calc(#{$col} * 2);
	}

	.push-right-3 {
		margin-right: calc(#{$col} * 3);
	}

	.push-right-4 {
		margin-right: calc(#{$col} * 4);
	}

	.push-right-5 {
		margin-right: calc(#{$col} * 5);
	}

	.push-right-6 {
		margin-right: calc(#{$col} * 6);
	}

	.push-right-7 {
		margin-right: calc(#{$col} * 7);
	}

	.push-right-8 {
		margin-right: calc(#{$col} * 8);
	}

	.push-right-9 {
		margin-right: calc(#{$col} * 9);
	}

	.push-right-10 {
		margin-right: calc(#{$col} * 10);
	}

	.push-right-11 {
		margin-right: calc(#{$col} * 11);
	}

	.push-right-12 {
		margin-right: calc(#{$col} * 12);
	}

	.push-left-1 {
		margin-left: $col;
	}

	.push-left-2 {
		margin-left: calc(#{$col} * 2);
	}

	.push-left-3 {
		margin-left: calc(#{$col} * 3);
	}

	.push-left-4 {
		margin-left: calc(#{$col} * 4);
	}

	.push-left-5 {
		margin-left: calc(#{$col} * 5);
	}

	.push-left-6 {
		margin-left: calc(#{$col} * 6);
	}

	.push-left-7 {
		margin-left: calc(#{$col} * 7);
	}

	.push-left-8 {
		margin-left: calc(#{$col} * 8);
	}

	.push-left-9 {
		margin-left: calc(#{$col} * 9);
	}

	.push-left-10 {
		margin-left: calc(#{$col} * 10);
	}

	.push-left-11 {
		margin-left: calc(#{$col} * 11);
	}

	.push-left-12 {
		margin-left: calc(#{$col} * 12);
	}
}

@mixin float-grid() {
	*zoom:1;
  &:before, 
  &:after {
    content: ""; 
    display: table; 
  }
  &:after {
    clear: both; 
  }
	> *[class^="col-"]:not(.right),
	> .col:not(.right) {
		float: left;
	}
	> *[class^="col-"].right,
	> .col.right {
		float: right;
	}
}

@mixin inline-grid() {
	font-size: 0;
	letter-spacing: 0;
	&.middle {
		> *[class^="col-"],
		> .col {
			vertical-align: middle;
		}
	}
	&.bottom {
		> *[class^="col-"],
		> .col {
			vertical-align: bottom;
		}
	}
	&.center {
		text-align: center;
	}
	&.right {
		text-align: right;
	}
	> *[class^="col-"],
	> .col {
		font-size: inherit;
		letter-spacing: inherit;
		display: inline-block;
		vertical-align: top;
	}
}

@mixin flex-grid() {
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;
	&.center {
		justify-content: center;
	}
	&.left {
		justify-content: flex-start;
	}
	&.right {
		justify-content: flex-end;
	}
	&.middle {
		align-items: center;
	}
	&.bottom {
		align-items: flex-end;
	}
	&.baseline {
		align-items: baseline;
	}
}

@mixin wide-gutter() {
	&.wide-gutter {
		@include wide-gutter-grid-setup();
		> *[class^="col"],
		> .col {
			padding-left: calc(#{$wide-gutter} / 2);
			padding-right: calc(#{$wide-gutter} / 2);
		}
	}
}

@mixin tight-gutter() {
	&.tight-gutter {
		@include tight-gutter-grid-setup();
		> *[class^="col"],
		> .col {
			padding-left: calc(#{$tight-gutter} / 2);
			padding-right: calc(#{$tight-gutter} / 2);
		}
	}
}

.float-grid,
.inline-grid,
.flex-grid {
	// Turn grid on at different breakpoints
	&:not(.no-break):not(.break-lg):not(.break-xlg):not(.break-sm) {
	  @include respond($md) {
	    @include grid-setup();
	    @include col-setup();
	    @include tight-gutter();
	  }
	  @include respond($lg) {
	  	@include wide-gutter();
	  }
	}
	&.no-break {
	  @include grid-setup();
	  @include col-setup();
	  @include tight-gutter();
	  @include respond($lg) {
	  	@include wide-gutter();
	  }
	}
	&.break-sm {
	  @include respond($sm) {
	    @include grid-setup();
	    @include col-setup();
	    @include tight-gutter();
	  }
	  @include respond($lg) {
	  	@include wide-gutter();
	  }
	}
	&.break-lg {
	  @include respond($lg) {
	    @include grid-setup();
	    @include col-setup();
	    @include tight-gutter();
	  }
	  @include respond($lg) {
	  	@include wide-gutter();
	  }
	}
	&.break-xlg {
	  @include respond($xlg) {
	    @include grid-setup();
	    @include col-setup();
	    @include tight-gutter();
	  }
	  @include respond($lg) {
	  	@include wide-gutter();
	  }
	}
}

.float-grid {
	// Turn grid on at different breakpoints
	&:not(.no-break):not(.break-lg):not(.break-xlg):not(.break-sm) {
	  @include respond($md) {
	    @include float-grid();
	  }
	}
	&.no-break {
	  @include float-grid();
	}
	&.break-sm {
	  @include respond($sm) {
	    @include float-grid();
	  }
	}
	&.break-lg {
	  @include respond($lg) {
	    @include float-grid();
	  }
	}
	&.break-xlg {
	  @include respond($xlg) {
	    @include float-grid();
	  }
	}
}

.inline-grid {
	// Turn grid on at different breakpoints
	&:not(.no-break):not(.break-lg):not(.break-xlg):not(.break-sm) {
	  @include respond($md) {
	    @include inline-grid();
	  }
	}
	&.no-break {
	  @include inline-grid();
	}
	&.break-sm {
	  @include respond($sm) {
	    @include inline-grid();
	  }
	}
	&.break-lg {
	  @include respond($lg) {
	    @include inline-grid();
	  }
	}
	&.break-xlg {
	  @include respond($xlg) {
	    @include inline-grid();
	  }
	}
}

.flex-grid {
	// Turn grid on at different breakpoints
	&:not(.no-break):not(.break-lg):not(.break-xlg):not(.break-sm) {
	  @include respond($md) {
	    @include flex-grid();
	  }
	}
	&.no-break {
	  @include flex-grid();
	}
	&.break-sm {
	  @include respond($sm) {
	    @include flex-grid();
	  }
	}
	&.break-lg {
	  @include respond($lg) {
	    @include flex-grid();
	  }
	}
	&.break-xlg {
	  @include respond($xlg) {
	    @include flex-grid();
	  }
	}
}